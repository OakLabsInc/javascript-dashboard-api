/**
 * OakOS Dashboard API
 * The Dashboard API provides a secure way to remotely issue commands to OakOS devices. All endpoints are generated from the [OakOS Platform gRPC API](https://github.com/OakLabsInc/platform-protos) 
 *
 * OpenAPI spec version: 5.0.0
 * Contact: oakos@zivelo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ApplicationConfiguration', 'model/ApplicationEnvironmentConfiguration', 'model/AudioConfiguration', 'model/AudioRequest', 'model/AuthenticationResponse', 'model/AutomaticStoreRequest', 'model/ChangeFriendlyNameRequest', 'model/CustomClaims', 'model/DisplayConfiguration', 'model/DisplayGlobalConfiguration', 'model/DisplayRequest', 'model/ForgetWifiRequest', 'model/GenericReponse', 'model/InstallRequest', 'model/JwtVerifyResponse', 'model/TouchDeviceConfiguration', 'model/TouchRequest', 'model/UserCustomClaims', 'model/WifiConfiguration', 'api/ApplicationApi', 'api/AudioApi', 'api/AuthApi', 'api/AutomaticApi', 'api/DisplayApi', 'api/HostApi', 'api/ManageApi', 'api/NetworkApi', 'api/TouchApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ApplicationConfiguration'), require('./model/ApplicationEnvironmentConfiguration'), require('./model/AudioConfiguration'), require('./model/AudioRequest'), require('./model/AuthenticationResponse'), require('./model/AutomaticStoreRequest'), require('./model/ChangeFriendlyNameRequest'), require('./model/CustomClaims'), require('./model/DisplayConfiguration'), require('./model/DisplayGlobalConfiguration'), require('./model/DisplayRequest'), require('./model/ForgetWifiRequest'), require('./model/GenericReponse'), require('./model/InstallRequest'), require('./model/JwtVerifyResponse'), require('./model/TouchDeviceConfiguration'), require('./model/TouchRequest'), require('./model/UserCustomClaims'), require('./model/WifiConfiguration'), require('./api/ApplicationApi'), require('./api/AudioApi'), require('./api/AuthApi'), require('./api/AutomaticApi'), require('./api/DisplayApi'), require('./api/HostApi'), require('./api/ManageApi'), require('./api/NetworkApi'), require('./api/TouchApi'));
  }
}(function(ApiClient, ApplicationConfiguration, ApplicationEnvironmentConfiguration, AudioConfiguration, AudioRequest, AuthenticationResponse, AutomaticStoreRequest, ChangeFriendlyNameRequest, CustomClaims, DisplayConfiguration, DisplayGlobalConfiguration, DisplayRequest, ForgetWifiRequest, GenericReponse, InstallRequest, JwtVerifyResponse, TouchDeviceConfiguration, TouchRequest, UserCustomClaims, WifiConfiguration, ApplicationApi, AudioApi, AuthApi, AutomaticApi, DisplayApi, HostApi, ManageApi, NetworkApi, TouchApi) {
  'use strict';

  /**
   * The OakOS Dashboard REST API is used for issuing remote commands to machines, as well as manage their metadata.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var dashboard = require('index'); // See note below*.
   * var xxxSvc = new dashboard.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new dashboard.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new dashboard.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new dashboard.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 5.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ApplicationConfiguration model constructor.
     * @property {module:model/ApplicationConfiguration}
     */
    ApplicationConfiguration: ApplicationConfiguration,
    /**
     * The ApplicationEnvironmentConfiguration model constructor.
     * @property {module:model/ApplicationEnvironmentConfiguration}
     */
    ApplicationEnvironmentConfiguration: ApplicationEnvironmentConfiguration,
    /**
     * The AudioConfiguration model constructor.
     * @property {module:model/AudioConfiguration}
     */
    AudioConfiguration: AudioConfiguration,
    /**
     * The AudioRequest model constructor.
     * @property {module:model/AudioRequest}
     */
    AudioRequest: AudioRequest,
    /**
     * The AuthenticationResponse model constructor.
     * @property {module:model/AuthenticationResponse}
     */
    AuthenticationResponse: AuthenticationResponse,
    /**
     * The AutomaticStoreRequest model constructor.
     * @property {module:model/AutomaticStoreRequest}
     */
    AutomaticStoreRequest: AutomaticStoreRequest,
    /**
     * The ChangeFriendlyNameRequest model constructor.
     * @property {module:model/ChangeFriendlyNameRequest}
     */
    ChangeFriendlyNameRequest: ChangeFriendlyNameRequest,
    /**
     * The CustomClaims model constructor.
     * @property {module:model/CustomClaims}
     */
    CustomClaims: CustomClaims,
    /**
     * The DisplayConfiguration model constructor.
     * @property {module:model/DisplayConfiguration}
     */
    DisplayConfiguration: DisplayConfiguration,
    /**
     * The DisplayGlobalConfiguration model constructor.
     * @property {module:model/DisplayGlobalConfiguration}
     */
    DisplayGlobalConfiguration: DisplayGlobalConfiguration,
    /**
     * The DisplayRequest model constructor.
     * @property {module:model/DisplayRequest}
     */
    DisplayRequest: DisplayRequest,
    /**
     * The ForgetWifiRequest model constructor.
     * @property {module:model/ForgetWifiRequest}
     */
    ForgetWifiRequest: ForgetWifiRequest,
    /**
     * The GenericReponse model constructor.
     * @property {module:model/GenericReponse}
     */
    GenericReponse: GenericReponse,
    /**
     * The InstallRequest model constructor.
     * @property {module:model/InstallRequest}
     */
    InstallRequest: InstallRequest,
    /**
     * The JwtVerifyResponse model constructor.
     * @property {module:model/JwtVerifyResponse}
     */
    JwtVerifyResponse: JwtVerifyResponse,
    /**
     * The TouchDeviceConfiguration model constructor.
     * @property {module:model/TouchDeviceConfiguration}
     */
    TouchDeviceConfiguration: TouchDeviceConfiguration,
    /**
     * The TouchRequest model constructor.
     * @property {module:model/TouchRequest}
     */
    TouchRequest: TouchRequest,
    /**
     * The UserCustomClaims model constructor.
     * @property {module:model/UserCustomClaims}
     */
    UserCustomClaims: UserCustomClaims,
    /**
     * The WifiConfiguration model constructor.
     * @property {module:model/WifiConfiguration}
     */
    WifiConfiguration: WifiConfiguration,
    /**
     * The ApplicationApi service constructor.
     * @property {module:api/ApplicationApi}
     */
    ApplicationApi: ApplicationApi,
    /**
     * The AudioApi service constructor.
     * @property {module:api/AudioApi}
     */
    AudioApi: AudioApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The AutomaticApi service constructor.
     * @property {module:api/AutomaticApi}
     */
    AutomaticApi: AutomaticApi,
    /**
     * The DisplayApi service constructor.
     * @property {module:api/DisplayApi}
     */
    DisplayApi: DisplayApi,
    /**
     * The HostApi service constructor.
     * @property {module:api/HostApi}
     */
    HostApi: HostApi,
    /**
     * The ManageApi service constructor.
     * @property {module:api/ManageApi}
     */
    ManageApi: ManageApi,
    /**
     * The NetworkApi service constructor.
     * @property {module:api/NetworkApi}
     */
    NetworkApi: NetworkApi,
    /**
     * The TouchApi service constructor.
     * @property {module:api/TouchApi}
     */
    TouchApi: TouchApi
  };

  return exports;
}));
