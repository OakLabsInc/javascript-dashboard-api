/**
 * OakOS Dashboard API
 * The Dashboard API provides a secure way to remotely issue commands to OakOS devices. All endpoints are generated from the [OakOS Platform gRPC API](https://github.com/OakLabsInc/platform-protos) 
 *
 * OpenAPI spec version: 5.0.0
 * Contact: oakos@zivelo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AudioConfiguration'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AudioConfiguration'));
  } else {
    // Browser globals (root is window)
    if (!root.dashboard) {
      root.dashboard = {};
    }
    root.dashboard.AudioRequest = factory(root.dashboard.ApiClient, root.dashboard.AudioConfiguration);
  }
}(this, function(ApiClient, AudioConfiguration) {
  'use strict';




  /**
   * The AudioRequest model module.
   * @module model/AudioRequest
   * @version 5.0.0
   */

  /**
   * Constructs a new <code>AudioRequest</code>.
   * Lists available mixers which correspond to connected audio devices; also shows the current configuration, i.e. volume and mute settings You may have to guess-and-check to determine which mixer corresponds to the physical device you want to control.
   * @alias module:model/AudioRequest
   * @class
   * @param mixerId {String} 
   * @param configuration {module:model/AudioConfiguration} 
   */
  var exports = function(mixerId, configuration) {
    var _this = this;

    _this['mixer_id'] = mixerId;
    _this['configuration'] = configuration;
  };

  /**
   * Constructs a <code>AudioRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AudioRequest} obj Optional instance to populate.
   * @return {module:model/AudioRequest} The populated <code>AudioRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('mixer_id')) {
        obj['mixer_id'] = ApiClient.convertToType(data['mixer_id'], 'String');
      }
      if (data.hasOwnProperty('configuration')) {
        obj['configuration'] = AudioConfiguration.constructFromObject(data['configuration']);
      }
    }
    return obj;
  }

  /**
   * @member {String} mixer_id
   */
  exports.prototype['mixer_id'] = undefined;
  /**
   * @member {module:model/AudioConfiguration} configuration
   */
  exports.prototype['configuration'] = undefined;



  return exports;
}));


